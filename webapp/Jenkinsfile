def build (Map args) {
        def defaults = [
        registryUrl: "https://registry.hub.docker.com",
        dockerfileDir: ".os4execrcise/webapp/app/",
        image: test/os4exercise,
        buildArgs: "",
        tag: "${env.BUILD_ID}"   
    ]
    arg = defaults + args

    def nameimage = "${args.image}:${args.tag}"

    docker.build (nameimage, "${args.buildArgs} ${args.dockerfileDir}")
    return "$nameimage"
}

def push (Map args) {
        def defaults = [
        registryUrl: "https://registry.hub.docker.com",
        image: "",
        pushLatest: true
    ]
    args = defaults + args
    docker.withRegistry(args.registryUrl, 'DockerHub-creds') {
        image.push()
        if (args.pushLatest) {
             image.push("latest")
        }
    }
    return "${image}:${args.tag}"
}


pipeline {

    agent any

    stages {

        stage ('Build image') {
            
            steps{
                script { 
                    build_image = build()
                }
            }

        }
        stage ('Push image') {
            steps{
                script {
                    push (image: build_image)
                }
            }

        }


    }




}
